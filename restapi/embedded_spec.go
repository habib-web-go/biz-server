// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "grpc/sqlpb.proto",
    "version": "version not set"
  },
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "SQLService"
        ],
        "operationId": "SQLService_getUsers",
        "parameters": [
          {
            "type": "string",
            "format": "uint64",
            "name": "userId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "authKey",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uint64",
            "name": "messageId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sqlInjectionGetUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/users-with-sql-inject": {
      "get": {
        "tags": [
          "SQLService"
        ],
        "operationId": "SQLService_getUsersWithSqlInject",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "authKey",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uint64",
            "name": "messageId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sqlInjectionGetUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "sqlInjectionGetUsersResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "format": "uint64"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sqlInjectionUser"
          }
        }
      }
    },
    "sqlInjectionSex": {
      "type": "string",
      "default": "Man",
      "enum": [
        "Man",
        "Female"
      ]
    },
    "sqlInjectionUser": {
      "type": "object",
      "properties": {
        "age": {
          "type": "string",
          "format": "uint64"
        },
        "createdAt": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "sex": {
          "$ref": "#/definitions/sqlInjectionSex"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "grpc/sqlpb.proto",
    "version": "version not set"
  },
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "SQLService"
        ],
        "operationId": "SQLService_getUsers",
        "parameters": [
          {
            "type": "string",
            "format": "uint64",
            "name": "userId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "authKey",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uint64",
            "name": "messageId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sqlInjectionGetUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    },
    "/users-with-sql-inject": {
      "get": {
        "tags": [
          "SQLService"
        ],
        "operationId": "SQLService_getUsersWithSqlInject",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "query"
          },
          {
            "type": "string",
            "name": "authKey",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uint64",
            "name": "messageId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sqlInjectionGetUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "sqlInjectionGetUsersResponse": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "format": "uint64"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sqlInjectionUser"
          }
        }
      }
    },
    "sqlInjectionSex": {
      "type": "string",
      "default": "Man",
      "enum": [
        "Man",
        "Female"
      ]
    },
    "sqlInjectionUser": {
      "type": "object",
      "properties": {
        "age": {
          "type": "string",
          "format": "uint64"
        },
        "createdAt": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "sex": {
          "$ref": "#/definitions/sqlInjectionSex"
        }
      }
    }
  }
}`))
}
